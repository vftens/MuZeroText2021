"use strict";
exports.__esModule = true;
exports.useChoiceGroup = void 0;
var tslib_1 = require("tslib");
function formatValue(valueProp, getKey, multiple) {
    var valueByKey = {};
    if (!valueProp) {
        return valueByKey;
    }
    var value = multiple ? valueProp : [valueProp];
    if (value && value.length > 0) {
        for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {
            var item = value_1[_i];
            valueByKey[getKey(item)] = item;
        }
    }
    return valueByKey;
}
function useChoiceGroup(_a) {
    var valueProp = _a.value, getKey = _a.getKey, callBackProp = _a.callBack, multiple = _a.multiple;
    var formatedValue = formatValue(valueProp, getKey, multiple);
    var getChecked = function (item) {
        return Object.prototype.hasOwnProperty.call(formatedValue, getKey(item));
    };
    var getOnChange = function (item) { return function (e) {
        var checked = getChecked(item);
        var key = getKey(item);
        if (multiple) {
            var newValue = void 0;
            if (checked) {
                var value = valueProp ? valueProp : [];
                newValue = value.filter(function (item) { return getKey(item) !== key; });
                if (newValue.length === 0) {
                    newValue = null;
                }
            }
            else {
                newValue = valueProp ? tslib_1.__spreadArrays(valueProp) : [];
                newValue.push(item);
            }
            var callBack = callBackProp;
            callBack({ e: e, value: newValue });
        }
        else {
            var callBack = callBackProp;
            callBack({ e: e, value: item });
        }
    }; };
    return {
        getOnChange: getOnChange,
        getChecked: getChecked
    };
}
exports.useChoiceGroup = useChoiceGroup;
