import './SelectDropdown.css';
import React from 'react';
import { GetOptionPropsResult, Option, OptionProps } from '../../../hooks/useSelect/useSelect';
import { PropsWithJsxAttributes } from '../../../utils/types/PropsWithJsxAttributes';
import { PropSize } from '../types';
export declare const selectDropdownform: readonly ["default", "brick", "round"];
export declare type SelectDropdownPropForm = typeof selectDropdownform[number];
export declare const defaultSelectDropdownPropForm: "default";
declare type Props<ITEM> = PropsWithJsxAttributes<{
    size: PropSize;
    id: string;
    controlRef: React.MutableRefObject<HTMLDivElement | null>;
    dropdownRef: React.MutableRefObject<HTMLDivElement | null>;
    visibleOptions: Option<ITEM>[];
    highlightedIndex: number;
    getOptionProps(props: OptionProps): GetOptionPropsResult;
    onCreate?(newLabel: string): void;
    inputValue?: string;
    hasGroup?: boolean;
    selectedValues: ITEM[] | null;
    labelForCreate?: string;
    labelForNotFound?: string;
    multi?: boolean;
    getOptionLabel(option: ITEM): string;
    form?: SelectDropdownPropForm;
    isOpen: boolean;
}>;
declare type SelectDropdown = <ITEM>(props: Props<ITEM>) => React.ReactElement | null;
export declare const SelectDropdown: SelectDropdown;
export {};
