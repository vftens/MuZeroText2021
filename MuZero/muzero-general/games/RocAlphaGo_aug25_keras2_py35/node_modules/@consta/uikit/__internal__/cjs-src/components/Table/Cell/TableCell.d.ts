import './TableCell.css';
import React from 'react';
import { TableColumn, TableRow } from '../Table';
export declare const verticalAligns: readonly ["top", "center", "bottom"];
export declare type VerticalAlign = typeof verticalAligns[number];
export declare const horizontalAligns: readonly ["left", "center", "right"];
export declare type HorizontalAlign = typeof horizontalAligns[number];
export declare const TableCell: React.ForwardRefExoticComponent<({
    column: TableColumn<TableRow> & {
        isSticky?: boolean;
        isResized?: boolean;
        filterable?: boolean;
    };
    onClick?: ((e: React.SyntheticEvent) => void) | undefined;
    style?: React.CSSProperties | undefined;
    className?: string | undefined;
    wrapperClassName?: string | undefined;
    children: React.ReactNode;
    showVerticalShadow?: boolean | undefined;
    verticalAlign?: "center" | "top" | "bottom" | undefined;
} & {
    type: 'header';
    isSticky?: boolean | undefined;
    isResized?: boolean | undefined;
} & React.RefAttributes<HTMLDivElement>) | ({
    column: TableColumn<TableRow> & {
        isSticky?: boolean;
        isResized?: boolean;
        filterable?: boolean;
    };
    onClick?: ((e: React.SyntheticEvent) => void) | undefined;
    style?: React.CSSProperties | undefined;
    className?: string | undefined;
    wrapperClassName?: string | undefined;
    children: React.ReactNode;
    showVerticalShadow?: boolean | undefined;
    verticalAlign?: "center" | "top" | "bottom" | undefined;
} & {
    type: 'content';
    isClickable?: boolean | undefined;
    isBorderTop?: boolean | undefined;
    isBorderLeft?: boolean | undefined;
} & React.RefAttributes<HTMLDivElement>) | ({
    column: TableColumn<TableRow> & {
        isSticky?: boolean;
        isResized?: boolean;
        filterable?: boolean;
    };
    onClick?: ((e: React.SyntheticEvent) => void) | undefined;
    style?: React.CSSProperties | undefined;
    className?: string | undefined;
    wrapperClassName?: string | undefined;
    children: React.ReactNode;
    showVerticalShadow?: boolean | undefined;
    verticalAlign?: "center" | "top" | "bottom" | undefined;
} & {
    type: 'resizer';
} & React.RefAttributes<HTMLDivElement>)>;
