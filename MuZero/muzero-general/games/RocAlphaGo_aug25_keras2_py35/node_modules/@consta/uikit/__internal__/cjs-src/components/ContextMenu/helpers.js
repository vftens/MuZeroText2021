"use strict";
exports.__esModule = true;
exports.getGroups = exports.contextMenuPropDefaultSubMenuDirection = exports.contextMenuPropSubMenuDirections = exports.contextMenuAccent = exports.contextMenuDefaultSize = exports.contextMenuSizes = exports.defaultGroupId = void 0;
exports.defaultGroupId = 'context-menu-no-group';
exports.contextMenuSizes = ['m', 's', 'l'];
exports.contextMenuDefaultSize = exports.contextMenuSizes[0];
exports.contextMenuAccent = ['alert', 'warning', 'success'];
exports.contextMenuPropSubMenuDirections = [
    'rightStartUp',
    'rightStartDown',
    'leftStartUp',
    'leftStartDown',
];
exports.contextMenuPropDefaultSubMenuDirection = exports.contextMenuPropSubMenuDirections[0];
function getGroups(items, getGroupId, sortGroup) {
    if (typeof getGroupId === 'function') {
        var groups = [];
        var _loop_1 = function (item) {
            var id = getGroupId(item) || exports.defaultGroupId;
            var index = groups.findIndex(function (group) { return group.id === id; });
            if (index >= 0) {
                groups[index].items.push(item);
            }
            else {
                var group = { id: id, items: [item] };
                groups.push(group);
            }
        };
        for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
            var item = items_1[_i];
            _loop_1(item);
        }
        if (typeof sortGroup === 'function') {
            groups.sort(function (a, b) { return sortGroup(a.id, b.id); });
        }
        return groups;
    }
    return [{ items: items, id: exports.defaultGroupId }];
}
exports.getGroups = getGroups;
